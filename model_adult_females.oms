val treeDist = Val[String]
val fileName = Val[String]

val bodyWeight = Val[Double]
val energyIntake = Val[Double]
val energyGain = Val[Double]
val initialSatiation = Val[Double]
val basalEnergy = Val[Double]
val brachiationSpeed = Val[Double]
val swaySpeed = Val[Double]
val climbSpeed = Val[Double]
val descentSpeed = Val[Double]
val walkSpeed = Val[Double]
val month = Val[Double]
val probMoveNoFeed = Val[Double]
val plotUpdate = Val[Boolean]

val seed = Val[Int]

val totalEnergyIntake = Val[Double]
val energyExpenditure = Val[Double]
val walk = Val[Double]
val sway = Val[Double]
val brachiation = Val[Double]
val climb = Val[Double]
val descent = Val[Double]
val travelDistance = Val[Double]
val feedingBudget = Val[Double]
val travellingBudget = Val[Double]
val restingBudget = Val[Double]
val stochasticmonth = Val[Boolean]

val model = 
  NetLogo6Task(workDirectory / "model/BORNEO-ABM.nlogo", Seq("random-seed ${seed}", "setup", "repeat 43200 [go]"), embedWorkspace = true, reuseWorkspace = true) set (
    inputs += seed,
    inputs += plotUpdate mapped "plot-update",
    inputs += treeDist mapped "tree-dist",
    inputs += fileName mapped "file-name",
    inputs += bodyWeight mapped "body-weight",
    inputs += energyIntake mapped "energy-intake",
    inputs += energyGain mapped "energy-gain",
    inputs += initialSatiation mapped "initial-satiation",
    inputs += basalEnergy mapped "basal-energy",
    inputs += walkSpeed mapped "walking-speed",
    inputs += brachiationSpeed mapped "brachiation-speed",
    inputs += swaySpeed mapped "sway-speed",
    inputs += climbSpeed mapped "climb-speed",
    inputs += descentSpeed mapped "descent-speed",
    //inputs += month mapped "month",
    inputs += probMoveNoFeed mapped "prob-move-no-feed",
    inputs += stochasticmonth mapped "stochastic-month",
    
    outputs += totalEnergyIntake mapped "[cumulative-energy-gain] of one-of orangutans",
    outputs += energyExpenditure mapped "[cumulative-movement-cost] of one-of orangutans + [basal-metabolic-cost] of one-of orangutans",
    outputs += walk mapped "[freq-walk] of one-of orangutans",
    outputs += sway mapped "[freq-sway] of one-of orangutans",
    outputs += brachiation mapped "[freq-brachiate] of one-of orangutans",
    outputs += climb mapped "[freq-climb] of one-of orangutans" ,
    outputs += descent mapped "[freq-descent] of one-of orangutans",
    outputs += travelDistance mapped "[cumulative-travel-length] of one-of orangutans",
    outputs += feedingBudget mapped "[budget-feeding] of one-of orangutans",
    outputs += travellingBudget mapped "[budget-travel] of one-of orangutans",
    outputs += restingBudget mapped "[budget-resting] of one-of orangutans",
    outputs += month mapped "month",
    plotUpdate := false,
    treeDist := "from-file",
    fileName := "sebangau.csv",
    
    bodyWeight := 35.0, // 30.0 - 45.0 
    energyIntake := 0.15,//5.5, // 1.0 - 10.0
    energyGain := 100.0, // 10.0 - 500.0
    initialSatiation := 0, // -500 - 500
    basalEnergy := 5.0, // 1.0 - 1.5
    walkSpeed := 0.5, // 0.5 - 1
    brachiationSpeed := 0.5, // 0.5 - 2
    swaySpeed := 0.5, // 0.5 - 2
    climbSpeed := 0.5, // 0.5 - 2
    descentSpeed := 0.5, // 0.5 - 2
    probMoveNoFeed := 0.1,
    month := 9,
    stochasticmonth := true,
    seed := 0
  )
  
val env =
  SLURMEnvironment(
    "widyastu",
    "taurus.hrsk.tu-dresden.de",
    workDirectory = "/tmp",
//    sharedDirectory = "/scratch/ws/0/widyastu-100",
    sharedDirectory = "/lustre/ssd/ws/widyastu-widyastussd",
    time = 1 hour,
    memory = 3000 megabytes,
    openMOLEMemory = 2000 megabytes,
    //reservation = "p_peatfire_386",
    nodes = 1,
    threads = 1
  )

model hook display on env